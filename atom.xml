<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>doubleyue的个人博客</title>
  
  
  <link href="https://doubleyue.life/atom.xml" rel="self"/>
  
  <link href="https://doubleyue.life/"/>
  <updated>2022-05-11T06:25:10.758Z</updated>
  <id>https://doubleyue.life/</id>
  
  <author>
    <name>doubleyue</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式之单例模式</title>
    <link href="https://doubleyue.life/2022/05/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>https://doubleyue.life/2022/05/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-05-11T06:25:10.000Z</published>
    <updated>2022-05-11T06:25:10.758Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>设计模式之工厂模式</title>
    <link href="https://doubleyue.life/2022/05/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>https://doubleyue.life/2022/05/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-05-11T05:02:43.000Z</published>
    <updated>2022-05-11T06:24:55.631Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一简单工厂模式simple-factory-pattern">一、简单工厂模式Simple Factory Pattern</h3><p>又称静态工厂方法Static Factory Method，属于<strong>创建型模式</strong>。</p><p>根据参数的不同返回不同类的实例。</p><p>简单工厂模式专门创建一个类来创建其他类的实例，被创建的实例通常具有共同的父类。类图如下：</p><p><img src="image-20220511132031921.png" alt="image-20220511132031921" style="zoom:50%;"></p><p>优点：将对象的创建和使用分离，把创建产品的过程交给专门的工厂类负责，客户端不用管具体是如何实现的</p><p>缺点：不够灵活，新增一个产品就需要修改工厂类，在工厂中加入必要的业务逻辑，违反了<strong>开闭原则</strong>。</p><h3 id="二工厂模式">二、工厂模式</h3><p>定义一个用于创建对象的接口，让子类决定实例化哪个类。工厂方法使一个类的实例化延迟到其子类。也就是说：</p><p>把核心工厂变成一个抽象接口，为不同的产品创建不同的子工厂，这样子产品的实例化将在子工厂中完成，如果增加新的产品，则创建新的子工厂即可，不需要修改原来的工厂类。类图如下：</p><figure><img src="image-20220511133928629.png" alt="image-20220511133928629"><figcaption aria-hidden="true">image-20220511133928629</figcaption></figure><h3 id="三抽象工厂模式">三、抽象工厂模式</h3><p>是工厂模式的扩展，使得每个子工厂可以创建多个产品，如果只有一个产品体系的话会退化成工厂模式，类图如下：</p><figure><img src="image-20220511142208829.png" alt="image-20220511142208829"><figcaption aria-hidden="true">image-20220511142208829</figcaption></figure><p>缺点：如果需要增加产品体系的话，仍旧需要修改抽象工厂和具体工厂的代码，违反<strong>开闭原则</strong>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一简单工厂模式simple-factory-pattern&quot;&gt;一、简单工厂模式Simple Factory Pattern&lt;/h3&gt;
&lt;p&gt;又称静态工厂方法Static Factory Method，属于&lt;strong&gt;创建型模式&lt;/strong&gt;。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="养家糊口" scheme="https://doubleyue.life/categories/%E5%85%BB%E5%AE%B6%E7%B3%8A%E5%8F%A3/"/>
    
    <category term="设计模式" scheme="https://doubleyue.life/categories/%E5%85%BB%E5%AE%B6%E7%B3%8A%E5%8F%A3/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="知识积累" scheme="https://doubleyue.life/tags/%E7%9F%A5%E8%AF%86%E7%A7%AF%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>2022暑期实习华为面试经验分享</title>
    <link href="https://doubleyue.life/2022/05/10/2022%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0%E5%8D%8E%E4%B8%BA%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    <id>https://doubleyue.life/2022/05/10/2022%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0%E5%8D%8E%E4%B8%BA%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</id>
    <published>2022-05-10T15:25:30.000Z</published>
    <updated>2022-05-10T15:31:12.301Z</updated>
    
    <content type="html"><![CDATA[<p>华为池子，深不可测~ 不过流程进展很快，而且很快会给结果，整体感觉很棒。</p><ol type="1"><li>投递简历：</li></ol><p>在有个实习群里加到以为hr，说有hc，于是投递了通用软件开发工程师的岗位，可以投两个意向。（但是第二个意向其实是不起作用的。</p><ol start="2" type="1"><li>笔试：</li></ol><p>第二周的周二收到周三晚上笔试的邮件，共3道题（分值100,200,300），达到100分就有面试机会。比较麻烦的点在于输入输出，需要从字符串解析出需要读取的数字，输出也是需要把数组转成串输出。</p><ol start="3" type="1"><li>综合测评：</li></ol><p>一周内收到邮件参加综合测评和面试，问了hr说是性格测试，约35min可以完成。有同学表示这个测试不过的话，可以再次参加一次。</p><ol start="4" type="1"><li>技术面：</li></ol><p>同综合测评一起发来的邮件，面试邀约第三周周二下午，可能因为前一个人的时间比较长，面试官上线的时间比预期晚了大约半个小时，面试全程约70min</p><p>​ • 首先介绍下项目，面试官问了点细节，包括自己实现部分的代码量，不难</p><p>​ • 两道编程题，共享屏幕编程：</p><p>​ ◦ 给满二叉树的前序遍历结果，输出后序遍历；一开始以为是完全二叉树，卡住了。。后来面试官提醒了下是满二叉树，然后就很流畅的写完啦</p><p>​ ◦ 上次机试第一题，上次没做出来，然后面试官就让我试试，因为一直不想做这个，所以也磕磕绊绊的，到最后也没完全做出来</p><p>​ • 问了几个八股问题：内核态是什么、线程同时读写问题、还有一些不太记得了，准备下八股问题！</p><p>差不多20min后收到面试通过的短信，很快很赞</p><ol start="5" type="1"><li><p>主管面：</p><p>两天后约了主管面，面试全程约35min</p></li></ol><p>​ • 问了些简历上的问题，多是关于大学的事情，以及职业规划方面的问题，因为准备不够，所以有些问题回答的不是特别好。需要认真准备准备！</p><p>​ • 反问：</p><p>​ ◦ 对互联网裁员的看法</p><p>​ ◦ 实习生的加班情况</p><p>​ ◦ 主要工作内容</p><p>也是差不多20分钟后收到了面试通过的短信，效率很快，超级赞。</p><ol start="6" type="1"><li>面试反馈：</li></ol><p>次日收到面试反馈邮件，对面试评价，五颗星好评</p><ol start="7" type="1"><li>查看官网应聘状态：</li></ol><p>​ • 在官网-个人中心-申请进展页面，按F12</p><p>​ • 选择 network - XHR</p><p>​ • F5刷新页面</p><p>​ • 点一下queryMyJobInterviewPortal...</p><p>​ • 关键属性：</p><p>​ ◦ Index在第一个，说明还在池子等着提交审批</p><p>​ ◦ resume_type提前，说明审批通过，快发意向了，但是牛客上也有说resume_type提前仍旧无消息的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;华为池子，深不可测~ 不过流程进展很快，而且很快会给结果，整体感觉很棒。&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;投递简历：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在有个实习群里加到以为hr，说有hc，于是投递了通用软件开发工程师的岗位，可以投两个意向。（但是第二个意向其实是不起</summary>
      
    
    
    
    <category term="养家糊口" scheme="https://doubleyue.life/categories/%E5%85%BB%E5%AE%B6%E7%B3%8A%E5%8F%A3/"/>
    
    
    <category term="经验分享" scheme="https://doubleyue.life/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Cplusplus八股</title>
    <link href="https://doubleyue.life/2022/05/10/Cplusplus%E5%85%AB%E8%82%A1/"/>
    <id>https://doubleyue.life/2022/05/10/Cplusplus%E5%85%AB%E8%82%A1/</id>
    <published>2022-05-10T14:59:53.000Z</published>
    <updated>2022-05-10T15:33:36.321Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一c和c的区别">一、C++和C的区别</h3><ol type="1"><li>面向过程和面向对象的区别</li><li>关键字不一样</li></ol><h3 id="二几个关键字">二、几个关键字</h3><ol type="1"><li>volatile</li><li>final</li><li>const</li></ol><h3 id="三三个特性">三、三个特性</h3><ol type="1"><li>封装</li><li>继承</li><li>多态</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一c和c的区别&quot;&gt;一、C++和C的区别&lt;/h3&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;面向过程和面向对象的区别&lt;/li&gt;
&lt;li&gt;关键字不一样&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;二几个关键字&quot;&gt;二、几个关键字&lt;/h3&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;vo</summary>
      
    
    
    
    <category term="养家糊口" scheme="https://doubleyue.life/categories/%E5%85%BB%E5%AE%B6%E7%B3%8A%E5%8F%A3/"/>
    
    
    <category term="知识积累" scheme="https://doubleyue.life/tags/%E7%9F%A5%E8%AF%86%E7%A7%AF%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>MySQL索引</title>
    <link href="https://doubleyue.life/2022/05/10/MySQL%E7%B4%A2%E5%BC%95/"/>
    <id>https://doubleyue.life/2022/05/10/MySQL%E7%B4%A2%E5%BC%95/</id>
    <published>2022-05-10T14:55:13.000Z</published>
    <updated>2022-05-10T15:52:37.546Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一什么是index">一、什么是index</h3><ol type="1"><li>帮助MySQL提高查询效率的<strong>数据结构</strong></li><li>优点：大大加快数据查询速度</li><li>缺点：①维护索引需要耗费数据库资源；②占用磁盘空间；③对表的数据进行增删改的时候需要维护索引，速度会受到影响。</li></ol><h3 id="二索引分类">二、索引分类</h3><ol type="1"><li>innoDB<ol type="1"><li>主键索引：设置为主键的时候，innodb为<strong>聚簇索引</strong>，不允许有空值</li><li>单值索引/单列索引/普通索引：一个索引只包含单个列，一个表可以有多个单列索引</li><li>唯一索引：索引列的值必须唯一，允许有空值，但是只能有一个null</li><li>复合索引：一个索引包含多个列</li></ol></li><li>myISAM（不需要背）<ol start="5" type="1"><li>full text全文索引：在定义索引的列上支持值的全文查找，允许空值、重复值，只能在文本类型就行创建</li></ol></li></ol><h3 id="三索引的基本操作">三、索引的基本操作</h3><ol type="1"><li><p>创建主键索引，在建表的时候自动创建<code>show index from table</code></p></li><li><p>创建单值索引：</p><ol type="1"><li>建表的时候创建：添加<code>key(name)</code>，无法指定索引名字，默认列名为索引名</li><li>建表之后创建：<code>create index [name] on table(name)</code></li></ol></li><li><p>创建唯一索引：</p><ol type="1"><li>建表的时候创建：添加<code>unique(name)</code>，无法指定索引名字，默认列名为索引名</li><li>建表之后创建：<code>create unique index [name] on table(name)</code></li></ol></li><li><p>复合索引</p><ol type="1"><li><p>建表的时候创建：添加<code>key(name, age)</code>，无法指定索引名字，默认列名为索引名</p></li><li><p>建表之后创建：<code>create unique index [name] on table(name,age)</code></p></li><li><p>Key_name为同一个，都是第一个name</p></li><li><p>利用复合索引需要符合<strong>最左前缀原则</strong>；MySQL会<strong>动态调整字段顺序</strong>以便利用索引</p><p><img src="image-20220505233324023.png" alt="image-20220505233324023" style="zoom:80%;"></p></li></ol></li></ol><h3 id="四innodb引擎底层数据结构">四、innodb引擎底层数据结构</h3><p>是B+树，是B树的一种优化</p><ol type="1"><li>根据主键索引进行排序，链接起来</li><li>一页16kb，可以存储多个结点</li><li>页目录也是16kb：存储每一页第一个结点的<strong>索引值</strong>和<strong>指针</strong>（指向每一页）</li><li>一般3层就是很庞大的数据量了，约10亿数据量</li><li>根节点常驻内存，一般2<sub>4层，最多1</sub>3次磁盘IO</li></ol><h3 id="五b-tree和btree的区别">五、B-tree和B+tree的区别：</h3><ol type="1"><li>b-tree的每个节点都需要存储完整的数据</li><li>b+tree只有叶子节点存储数据，可以降低树的高度</li></ol><h3 id="六聚簇索引和非聚簇索引">六、聚簇索引和非聚簇索引</h3><ol type="1"><li><p>聚簇索引：将数据存储与索引放到了一起，索引结构的叶子节点保存了行数据。比如主键索引等。</p><ol type="1"><li>默认是主键，如果没有主键，则会选择一个唯一且非空的索引代替；</li><li>如果这个索引也没有，innodb会隐式定义一个主键来作为聚簇索引；</li><li>如果已设置了主键为聚簇索引而想要单独设置聚簇索引，必须先删除主键--&gt;添加聚簇索引--&gt;恢复主键。</li></ol></li><li><p>非聚簇索引：将数据与索引分开存储，索引结构的叶子结点指向了数据对应的位置。比如单列索引等</p></li><li><p>特点：①在innodb中，一个表中只能有一个聚簇索引，在聚簇索引上创建的索引称之为辅助索引；②非聚簇索引都是辅助索引，比如单列索引、唯一索引、复合索引。③<strong>辅助索引</strong>的叶子节点存储的不是行的物理位置，而是主键值。④辅助索引访问数据总是需要<strong>二次查找</strong>。</p><p><img src="image-20220506001614319.png" alt="image-20220506001614319" style="zoom:75%;"></p></li><li><p>面试题：为什么辅助索引插入的主键值而不是物理位置？因为增删改的时候需要修改地址，如果非聚簇索引存储的地址，会导致在增删改的时候额外修改索引。</p></li></ol><h3 id="七myisam的索引非聚簇索引">七、myISAM的索引：非聚簇索引</h3><p><img src="image-20220506002554510.png" alt="image-20220506002554510" style="zoom:75%;"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一什么是index&quot;&gt;一、什么是index&lt;/h3&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;帮助MySQL提高查询效率的&lt;strong&gt;数据结构&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;优点：大大加快数据查询速度&lt;/li&gt;
&lt;li&gt;缺点：①维护索引需要耗费数据库资源；②</summary>
      
    
    
    
    
    <category term="知识积累" scheme="https://doubleyue.life/tags/%E7%9F%A5%E8%AF%86%E7%A7%AF%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>通过hexo+github配置个人博客的过程</title>
    <link href="https://doubleyue.life/2022/05/10/%E9%80%9A%E8%BF%87hexo+github%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/"/>
    <id>https://doubleyue.life/2022/05/10/%E9%80%9A%E8%BF%87hexo+github%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/</id>
    <published>2022-05-10T06:49:01.000Z</published>
    <updated>2022-05-10T13:07:51.521Z</updated>
    
    <content type="html"><![CDATA[<ol type="1"><li>购买域名并设置</li><li>安装git</li><li>创建GitHub仓库</li><li>在仓库创建pages页面，并修改域名</li><li>关联仓库和本地主机</li><li>安装hexo</li><li>初始化本地博客目录</li><li>生成并在本地测试</li><li>部署到GitHub仓库并打开域名查看 -- 反应很慢</li><li>找个自己喜欢的主题并进行一系列的配置</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;购买域名并设置&lt;/li&gt;
&lt;li&gt;安装git&lt;/li&gt;
&lt;li&gt;创建GitHub仓库&lt;/li&gt;
&lt;li&gt;在仓库创建pages页面，并修改域名&lt;/li&gt;
&lt;li&gt;关联仓库和本地主机&lt;/li&gt;
&lt;li&gt;安装hexo&lt;/li&gt;
&lt;li&gt;初始化本地博客</summary>
      
    
    
    
    
    <category term="经验分享" scheme="https://doubleyue.life/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
</feed>
