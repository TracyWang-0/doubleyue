<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>doubleyue的个人博客</title>
  
  
  <link href="https://doubleyue.life/atom.xml" rel="self"/>
  
  <link href="https://doubleyue.life/"/>
  <updated>2022-05-10T15:02:23.985Z</updated>
  <id>https://doubleyue.life/</id>
  
  <author>
    <name>doubleyue</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cplusplus八股</title>
    <link href="https://doubleyue.life/2022/05/10/Cplusplus%E5%85%AB%E8%82%A1-1/"/>
    <id>https://doubleyue.life/2022/05/10/Cplusplus%E5%85%AB%E8%82%A1-1/</id>
    <published>2022-05-10T14:59:53.000Z</published>
    <updated>2022-05-10T15:02:23.985Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一c和c的区别">一、C++和C的区别</h2><ol type="1"><li>面向过程和面向对象的区别</li><li>关键字不一样</li></ol><h2 id="二几个关键字">二、几个关键字</h2><ol type="1"><li>volatile</li><li>final</li><li>const</li></ol><h2 id="三三个特性">三、三个特性</h2><ol type="1"><li>封装</li><li>继承</li><li>多态</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一c和c的区别&quot;&gt;一、C++和C的区别&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;面向过程和面向对象的区别&lt;/li&gt;
&lt;li&gt;关键字不一样&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;二几个关键字&quot;&gt;二、几个关键字&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;vo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL索引</title>
    <link href="https://doubleyue.life/2022/05/10/MySQL%E7%B4%A2%E5%BC%95/"/>
    <id>https://doubleyue.life/2022/05/10/MySQL%E7%B4%A2%E5%BC%95/</id>
    <published>2022-05-10T14:55:13.000Z</published>
    <updated>2022-05-10T14:56:03.418Z</updated>
    
    <content type="html"><![CDATA[<ol type="1"><li><p>什么是index</p><ol type="1"><li>帮助MySQL提高查询效率的<strong>数据结构</strong></li><li>优点：大大加快数据查询速度</li><li>缺点：①维护索引需要耗费数据库资源；②占用磁盘空间；③对表的数据进行增删改的时候需要维护索引，速度会受到影响。</li></ol></li><li><p>索引分类</p><ol type="1"><li>innoDB<ol type="1"><li>主键索引：设置为主键的时候，innodb为<strong>聚簇索引</strong>，不允许有空值</li><li>单值索引/单列索引/普通索引：一个索引只包含单个列，一个表可以有多个单列索引</li><li>唯一索引：索引列的值必须唯一，允许有空值，但是只能有一个null</li><li>复合索引：一个索引包含多个列</li></ol></li><li>myISAM（不需要背）<ol start="5" type="1"><li>full text全文索引：在定义索引的列上支持值的全文查找，允许空值、重复值，只能在文本类型就行创建</li></ol></li></ol></li><li><p>索引的基本操作</p><ol type="1"><li><p>创建主键索引，在建表的时候自动创建<code>show index from table</code></p></li><li><p>创建单值索引：</p><ol type="1"><li>建表的时候创建：添加<code>key(name)</code>，无法指定索引名字，默认列名为索引名</li><li>建表之后创建：<code>create index [name] on table(name)</code></li></ol></li><li><p>创建唯一索引：</p><ol type="1"><li>建表的时候创建：添加<code>unique(name)</code>，无法指定索引名字，默认列名为索引名</li><li>建表之后创建：<code>create unique index [name] on table(name)</code></li></ol></li><li><p>复合索引</p><ol type="1"><li><p>建表的时候创建：添加<code>key(name, age)</code>，无法指定索引名字，默认列名为索引名</p></li><li><p>建表之后创建：<code>create unique index [name] on table(name,age)</code></p></li><li><p>Key_name为同一个，都是第一个name</p></li><li><p>利用复合索引需要符合<strong>最左前缀原则</strong>；MySQL会<strong>动态调整字段顺序</strong>以便利用索引</p><p><img src="/Users/tracywang/Library/Application Support/typora-user-images/image-20220505233324023.png" alt="image-20220505233324023" style="zoom:60%;"></p></li></ol></li></ol></li><li><p>innodb引擎底层数据结构 --- B+树，是B树的一种优化</p><ol type="1"><li>根据主键索引进行排序，链接起来</li><li>一页16kb，可以存储多个结点</li><li>页目录也是16kb：存储每一页第一个结点的<strong>索引值</strong>和<strong>指针</strong>（指向每一页）</li><li>一般3层就是很庞大的数据量了，约10亿数据量</li><li>根节点常驻内存，一般2<sub>4层，最多1</sub>3次磁盘IO</li></ol></li><li><p>B-tree 和 B+tree的区别：</p><ol type="1"><li>b-tree的每个节点都需要存储完整的数据</li><li>b+tree只有叶子节点存储数据，可以降低树的高度</li></ol></li><li><p>聚簇索引和非聚簇索引</p><ol type="1"><li><p>聚簇索引：将数据存储与索引放到了一起，索引结构的叶子节点保存了行数据。比如主键索引等。</p><ol type="1"><li>默认是主键，如果没有主键，则会选择一个唯一且非空的索引代替；</li><li>如果这个索引也没有，innodb会隐式定义一个主键来作为聚簇索引；</li><li>如果已设置了主键为聚簇索引而想要单独设置聚簇索引，必须先删除主键--&gt;添加聚簇索引--&gt;恢复主键。</li></ol></li><li><p>非聚簇索引：将数据与索引分开存储，索引结构的叶子结点指向了数据对应的位置。比如单列索引等</p></li><li><p>特点：①在innodb中，一个表中只能有一个聚簇索引，在聚簇索引上创建的索引称之为辅助索引；②非聚簇索引都是辅助索引，比如单列索引、唯一索引、复合索引。③<strong>辅助索引</strong>的叶子节点存储的不是行的物理位置，而是主键值。④辅助索引访问数据总是需要<strong>二次查找</strong>。</p><p><img src="/Users/tracywang/Library/Application Support/typora-user-images/image-20220506001614319.png" alt="image-20220506001614319" style="zoom:70%;"></p></li><li><p>面试题：为什么辅助索引插入的主键值而不是物理位置？因为增删改的时候需要修改地址，如果非聚簇索引存储的地址，会导致在增删改的时候额外修改索引。</p></li></ol></li><li><p>myISAM的索引：非聚簇索引</p><p><img src="/Users/tracywang/Library/Application Support/typora-user-images/image-20220506002554510.png" alt="image-20220506002554510" style="zoom:75%;"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;p&gt;什么是index&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;帮助MySQL提高查询效率的&lt;strong&gt;数据结构&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;优点：大大加快数据查询速度&lt;/li&gt;
&lt;li&gt;缺点：①维护索引需要耗费数据库资源；②占</summary>
      
    
    
    
    
    <category term="知识积累" scheme="https://doubleyue.life/tags/%E7%9F%A5%E8%AF%86%E7%A7%AF%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>通过hexo+github配置个人博客的过程</title>
    <link href="https://doubleyue.life/2022/05/10/%E9%80%9A%E8%BF%87hexo+github%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/"/>
    <id>https://doubleyue.life/2022/05/10/%E9%80%9A%E8%BF%87hexo+github%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/</id>
    <published>2022-05-10T06:49:01.000Z</published>
    <updated>2022-05-10T13:07:51.521Z</updated>
    
    <content type="html"><![CDATA[<ol type="1"><li>购买域名并设置</li><li>安装git</li><li>创建GitHub仓库</li><li>在仓库创建pages页面，并修改域名</li><li>关联仓库和本地主机</li><li>安装hexo</li><li>初始化本地博客目录</li><li>生成并在本地测试</li><li>部署到GitHub仓库并打开域名查看 -- 反应很慢</li><li>找个自己喜欢的主题并进行一系列的配置</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;购买域名并设置&lt;/li&gt;
&lt;li&gt;安装git&lt;/li&gt;
&lt;li&gt;创建GitHub仓库&lt;/li&gt;
&lt;li&gt;在仓库创建pages页面，并修改域名&lt;/li&gt;
&lt;li&gt;关联仓库和本地主机&lt;/li&gt;
&lt;li&gt;安装hexo&lt;/li&gt;
&lt;li&gt;初始化本地博客</summary>
      
    
    
    
    
    <category term="经验分享" scheme="https://doubleyue.life/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
</feed>
